# -*- coding: utf-8 -*-
"""
Created on Mon Apr 19 16:55:35 2021

@author: Austin Schenk
"""

#Austin Schenk
#Project Euler Problem 2




#Each new term in the Fibonacci sequence is generated by adding the previous 
#two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed 
#four million, find the sum of the even-valued terms.





import numpy as np




def fibbs (x):
    spiral = [0,1]
    
    for i in range(2,x+1):
        new = spiral[i-1] + spiral[i-2]
        
        spiral.append(new)
    return spiral

test = fibbs(10)
print(test)

print(fibbs(50))



seq = np.asarray(fibbs(50))
even = []
odd = []

for i in range(0,50):
    if seq[i] <= 4000000:
        if seq[i]%2 == 0:
            even.append(seq[i])
        else:
            odd.append(seq[i])
    
    else:
        break
        
print(odd)
    
sum(odd)

     












